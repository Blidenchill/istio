{{- if .Values.global.configCluster }}
{{- if .Values.global.configValidation }}
{{- end }}
apiVersion: admissionregistration.k8s.io/v1
{{- end }}
kind: ValidatingWebhookConfiguration
{{- end }}
metadata:
{{- end }}
  name: istio-validator{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}-{{ .Values.global.istioNamespace }}
{{- end }}
  labels:
{{- end }}
    app: istiod
{{- end }}
    release: {{ .Release.Name }}
{{- end }}
    istio: istiod
{{- end }}
    istio.io/rev: {{ .Values.revision | default "default" }}
{{- end }}
webhooks:
{{- end }}
  # Webhook handling per-revision validation. Mostly here so we can determine whether webhooks
{{- end }}
  # are rejecting invalid configs on a per-revision basis.
{{- end }}
  - name: rev.validation.istio.io
{{- end }}
    clientConfig:
{{- end }}
      # Should change from base but cannot for API compat
{{- end }}
      {{- if .Values.base.validationURL }}
{{- end }}
      url: {{ .Values.base.validationURL }}
{{- end }}
      {{- else }}
{{- end }}
      service:
{{- end }}
        name: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}
{{- end }}
        namespace: {{ .Values.global.istioNamespace }}
{{- end }}
        path: "/validate"
{{- end }}
      {{- end }}
{{- end }}
      caBundle: "" # patched at runtime when the webhook is ready.
{{- end }}
    rules:
{{- end }}
      - operations:
{{- end }}
          - CREATE
{{- end }}
          - UPDATE
{{- end }}
        apiGroups:
{{- end }}
          - security.istio.io
{{- end }}
          - networking.istio.io
{{- end }}
        apiVersions:
{{- end }}
          - "*"
{{- end }}
        resources:
{{- end }}
          - "*"
{{- end }}
    # Fail open until the validation webhook is ready. The webhook controller
{{- end }}
    # will update this to `Fail` and patch in the `caBundle` when the webhook
{{- end }}
    # endpoint is ready.
{{- end }}
    failurePolicy: Ignore
{{- end }}
    sideEffects: None
{{- end }}
    admissionReviewVersions: ["v1beta1", "v1"]
{{- end }}
    objectSelector:
{{- end }}
      matchExpressions:
{{- end }}
        - key: istio.io/rev
{{- end }}
          operator: In
{{- end }}
          values:
{{- end }}
          {{- if (eq .Values.revision "") }}
{{- end }}
          - "default"
{{- end }}
          {{- else }}
{{- end }}
          - "{{ .Values.revision }}"
{{- end }}
          {{- end }}
{{- end }}
  # Webhook handling default validation
{{- end }}
  - name: validation.istio.io
{{- end }}
    clientConfig:
{{- end }}
      # Should change from base but cannot for API compat
{{- end }}
      {{- if .Values.base.validationURL }}
{{- end }}
      url: {{ .Values.base.validationURL }}
{{- end }}
      {{- else }}
{{- end }}
      service:
{{- end }}
        name: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}
{{- end }}
        namespace: {{ .Values.global.istioNamespace }}
{{- end }}
        path: "/validate"
{{- end }}
      {{- end }}
{{- end }}
      caBundle: ""
{{- end }}
    rules:
{{- end }}
      - operations:
{{- end }}
          - CREATE
{{- end }}
          - UPDATE
{{- end }}
        apiGroups:
{{- end }}
          - security.istio.io
{{- end }}
          - networking.istio.io
{{- end }}
        apiVersions:
{{- end }}
          - "*"
{{- end }}
        resources:
{{- end }}
          - "*"
{{- end }}
    failurePolicy: Ignore
{{- end }}
    sideEffects: None
{{- end }}
    admissionReviewVersions: ["v1beta1", "v1"]
{{- end }}
    objectSelector:
{{- end }}
      matchExpressions:
{{- end }}
        - key: istio.io/rev
{{- end }}
          operator: DoesNotExist
{{- end }}
---
{{- end }}
{{- end }}
{{- end }}
